/**
 * Kore API
 * Kore API provides the frontend API (kore.appvia.io)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@appvia.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1IDPUser model module.
 * @module model/V1IDPUser
 * @version 0.0.1
 */
class V1IDPUser {
    /**
     * Constructs a new <code>V1IDPUser</code>.
     * @alias module:model/V1IDPUser
     * @param email {String} 
     */
    constructor(email) { 
        
        V1IDPUser.initialize(this, email);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, email) { 
        obj['email'] = email;
    }

    /**
     * Constructs a <code>V1IDPUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1IDPUser} obj Optional instance to populate.
     * @return {module:model/V1IDPUser} The populated <code>V1IDPUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1IDPUser();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
        }
        return obj;
    }

/**
     * @return {String}
     */
    getEmail() {
        return this.email;
    }

    /**
     * @param {String} email
     */
    setEmail(email) {
        this['email'] = email;
    }
/**
     * @return {String}
     */
    getUuid() {
        return this.uuid;
    }

    /**
     * @param {String} uuid
     */
    setUuid(uuid) {
        this['uuid'] = uuid;
    }

}

/**
 * @member {String} email
 */
V1IDPUser.prototype['email'] = undefined;

/**
 * @member {String} uuid
 */
V1IDPUser.prototype['uuid'] = undefined;






export default V1IDPUser;

