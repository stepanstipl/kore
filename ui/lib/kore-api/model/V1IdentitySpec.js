/**
 * Kore API
 * Kore API provides the frontend API (kore.appvia.io)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@appvia.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import V1BasicAuth from './V1BasicAuth';
import V1IDPUser from './V1IDPUser';
import V1User from './V1User';

/**
 * The V1IdentitySpec model module.
 * @module model/V1IdentitySpec
 * @version 0.0.1
 */
class V1IdentitySpec {
    /**
     * Constructs a new <code>V1IdentitySpec</code>.
     * @alias module:model/V1IdentitySpec
     * @param accountType {String} 
     * @param user {module:model/V1User} 
     */
    constructor(accountType, user) { 
        
        V1IdentitySpec.initialize(this, accountType, user);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountType, user) { 
        obj['accountType'] = accountType;
        obj['user'] = user;
    }

    /**
     * Constructs a <code>V1IdentitySpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1IdentitySpec} obj Optional instance to populate.
     * @return {module:model/V1IdentitySpec} The populated <code>V1IdentitySpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1IdentitySpec();

            if (data.hasOwnProperty('accountType')) {
                obj['accountType'] = ApiClient.convertToType(data['accountType'], 'String');
            }
            if (data.hasOwnProperty('basicAuth')) {
                obj['basicAuth'] = V1BasicAuth.constructFromObject(data['basicAuth']);
            }
            if (data.hasOwnProperty('idpUser')) {
                obj['idpUser'] = V1IDPUser.constructFromObject(data['idpUser']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = V1User.constructFromObject(data['user']);
            }
        }
        return obj;
    }

/**
     * @return {String}
     */
    getAccountType() {
        return this.accountType;
    }

    /**
     * @param {String} accountType
     */
    setAccountType(accountType) {
        this['accountType'] = accountType;
    }
/**
     * @return {module:model/V1BasicAuth}
     */
    getBasicAuth() {
        return this.basicAuth;
    }

    /**
     * @param {module:model/V1BasicAuth} basicAuth
     */
    setBasicAuth(basicAuth) {
        this['basicAuth'] = basicAuth;
    }
/**
     * @return {module:model/V1IDPUser}
     */
    getIdpUser() {
        return this.idpUser;
    }

    /**
     * @param {module:model/V1IDPUser} idpUser
     */
    setIdpUser(idpUser) {
        this['idpUser'] = idpUser;
    }
/**
     * @return {module:model/V1User}
     */
    getUser() {
        return this.user;
    }

    /**
     * @param {module:model/V1User} user
     */
    setUser(user) {
        this['user'] = user;
    }

}

/**
 * @member {String} accountType
 */
V1IdentitySpec.prototype['accountType'] = undefined;

/**
 * @member {module:model/V1BasicAuth} basicAuth
 */
V1IdentitySpec.prototype['basicAuth'] = undefined;

/**
 * @member {module:model/V1IDPUser} idpUser
 */
V1IdentitySpec.prototype['idpUser'] = undefined;

/**
 * @member {module:model/V1User} user
 */
V1IdentitySpec.prototype['user'] = undefined;






export default V1IdentitySpec;

