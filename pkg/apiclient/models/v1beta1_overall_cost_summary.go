// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1beta1OverallCostSummary v1beta1 overall cost summary
//
// swagger:model v1beta1.OverallCostSummary
type V1beta1OverallCostSummary struct {

	// cost
	// Required: true
	Cost *int64 `json:"cost"`

	// team costs
	// Required: true
	TeamCosts []*V1beta1TeamCostSummary `json:"teamCosts"`

	// usage end time
	UsageEndTime string `json:"usageEndTime,omitempty"`

	// usage start time
	UsageStartTime string `json:"usageStartTime,omitempty"`
}

// Validate validates this v1beta1 overall cost summary
func (m *V1beta1OverallCostSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCost(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTeamCosts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1beta1OverallCostSummary) validateCost(formats strfmt.Registry) error {

	if err := validate.Required("cost", "body", m.Cost); err != nil {
		return err
	}

	return nil
}

func (m *V1beta1OverallCostSummary) validateTeamCosts(formats strfmt.Registry) error {

	if err := validate.Required("teamCosts", "body", m.TeamCosts); err != nil {
		return err
	}

	for i := 0; i < len(m.TeamCosts); i++ {
		if swag.IsZero(m.TeamCosts[i]) { // not required
			continue
		}

		if m.TeamCosts[i] != nil {
			if err := m.TeamCosts[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("teamCosts" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1beta1OverallCostSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1beta1OverallCostSummary) UnmarshalBinary(b []byte) error {
	var res V1beta1OverallCostSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
