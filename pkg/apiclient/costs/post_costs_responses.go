// Code generated by go-swagger; DO NOT EDIT.

package costs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// PostCostsReader is a Reader for the PostCosts structure.
type PostCostsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCostsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostCostsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostCostsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostCostsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostCostsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostCostsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostCostsOK creates a PostCostsOK with default headers values
func NewPostCostsOK() *PostCostsOK {
	return &PostCostsOK{}
}

/*PostCostsOK handles this case with default header values.

Costs successfully persisted
*/
type PostCostsOK struct {
}

func (o *PostCostsOK) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/costs][%d] postCostsOK ", 200)
}

func (o *PostCostsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostCostsBadRequest creates a PostCostsBadRequest with default headers values
func NewPostCostsBadRequest() *PostCostsBadRequest {
	return &PostCostsBadRequest{}
}

/*PostCostsBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type PostCostsBadRequest struct {
	Payload *models.ValidationError
}

func (o *PostCostsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/costs][%d] postCostsBadRequest  %+v", 400, o.Payload)
}

func (o *PostCostsBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *PostCostsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCostsUnauthorized creates a PostCostsUnauthorized with default headers values
func NewPostCostsUnauthorized() *PostCostsUnauthorized {
	return &PostCostsUnauthorized{}
}

/*PostCostsUnauthorized handles this case with default header values.

If not authenticated
*/
type PostCostsUnauthorized struct {
}

func (o *PostCostsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/costs][%d] postCostsUnauthorized ", 401)
}

func (o *PostCostsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostCostsForbidden creates a PostCostsForbidden with default headers values
func NewPostCostsForbidden() *PostCostsForbidden {
	return &PostCostsForbidden{}
}

/*PostCostsForbidden handles this case with default header values.

If authenticated but not authorized
*/
type PostCostsForbidden struct {
}

func (o *PostCostsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/costs][%d] postCostsForbidden ", 403)
}

func (o *PostCostsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostCostsInternalServerError creates a PostCostsInternalServerError with default headers values
func NewPostCostsInternalServerError() *PostCostsInternalServerError {
	return &PostCostsInternalServerError{}
}

/*PostCostsInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type PostCostsInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *PostCostsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/costs][%d] postCostsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCostsInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *PostCostsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
