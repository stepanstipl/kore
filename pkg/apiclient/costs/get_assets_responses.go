// Code generated by go-swagger; DO NOT EDIT.

package costs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// GetAssetsReader is a Reader for the GetAssets structure.
type GetAssetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAssetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAssetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAssetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAssetsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAssetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAssetsOK creates a GetAssetsOK with default headers values
func NewGetAssetsOK() *GetAssetsOK {
	return &GetAssetsOK{}
}

/*GetAssetsOK handles this case with default header values.

Metadata describing the assets for the cloud provider in question
*/
type GetAssetsOK struct {
	Payload *models.V1beta1CostAssetList
}

func (o *GetAssetsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/costs/assets/{provider}][%d] getAssetsOK  %+v", 200, o.Payload)
}

func (o *GetAssetsOK) GetPayload() *models.V1beta1CostAssetList {
	return o.Payload
}

func (o *GetAssetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1beta1CostAssetList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssetsUnauthorized creates a GetAssetsUnauthorized with default headers values
func NewGetAssetsUnauthorized() *GetAssetsUnauthorized {
	return &GetAssetsUnauthorized{}
}

/*GetAssetsUnauthorized handles this case with default header values.

If not authenticated
*/
type GetAssetsUnauthorized struct {
}

func (o *GetAssetsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/costs/assets/{provider}][%d] getAssetsUnauthorized ", 401)
}

func (o *GetAssetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAssetsForbidden creates a GetAssetsForbidden with default headers values
func NewGetAssetsForbidden() *GetAssetsForbidden {
	return &GetAssetsForbidden{}
}

/*GetAssetsForbidden handles this case with default header values.

If authenticated but not authorized
*/
type GetAssetsForbidden struct {
}

func (o *GetAssetsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/costs/assets/{provider}][%d] getAssetsForbidden ", 403)
}

func (o *GetAssetsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAssetsInternalServerError creates a GetAssetsInternalServerError with default headers values
func NewGetAssetsInternalServerError() *GetAssetsInternalServerError {
	return &GetAssetsInternalServerError{}
}

/*GetAssetsInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type GetAssetsInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *GetAssetsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/costs/assets/{provider}][%d] getAssetsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAssetsInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *GetAssetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
