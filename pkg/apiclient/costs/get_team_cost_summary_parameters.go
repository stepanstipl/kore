// Code generated by go-swagger; DO NOT EDIT.

package costs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetTeamCostSummaryParams creates a new GetTeamCostSummaryParams object
// with the default values initialized.
func NewGetTeamCostSummaryParams() *GetTeamCostSummaryParams {
	var ()
	return &GetTeamCostSummaryParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetTeamCostSummaryParamsWithTimeout creates a new GetTeamCostSummaryParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetTeamCostSummaryParamsWithTimeout(timeout time.Duration) *GetTeamCostSummaryParams {
	var ()
	return &GetTeamCostSummaryParams{

		timeout: timeout,
	}
}

// NewGetTeamCostSummaryParamsWithContext creates a new GetTeamCostSummaryParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetTeamCostSummaryParamsWithContext(ctx context.Context) *GetTeamCostSummaryParams {
	var ()
	return &GetTeamCostSummaryParams{

		Context: ctx,
	}
}

// NewGetTeamCostSummaryParamsWithHTTPClient creates a new GetTeamCostSummaryParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetTeamCostSummaryParamsWithHTTPClient(client *http.Client) *GetTeamCostSummaryParams {
	var ()
	return &GetTeamCostSummaryParams{
		HTTPClient: client,
	}
}

/*GetTeamCostSummaryParams contains all the parameters to send to the API endpoint
for the get team cost summary operation typically these are written to a http.Request
*/
type GetTeamCostSummaryParams struct {

	/*From
	  Start of time range to return summary for

	*/
	From string
	/*Provider
	  Restrict to costs for specified cloud provider (e.g. gcp, aws, azure)

	*/
	Provider *string
	/*TeamIdentifier
	  Team identifier to retrieve costs for

	*/
	TeamIdentifier string
	/*To
	  End of time range to return summary for

	*/
	To string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get team cost summary params
func (o *GetTeamCostSummaryParams) WithTimeout(timeout time.Duration) *GetTeamCostSummaryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get team cost summary params
func (o *GetTeamCostSummaryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get team cost summary params
func (o *GetTeamCostSummaryParams) WithContext(ctx context.Context) *GetTeamCostSummaryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get team cost summary params
func (o *GetTeamCostSummaryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get team cost summary params
func (o *GetTeamCostSummaryParams) WithHTTPClient(client *http.Client) *GetTeamCostSummaryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get team cost summary params
func (o *GetTeamCostSummaryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFrom adds the from to the get team cost summary params
func (o *GetTeamCostSummaryParams) WithFrom(from string) *GetTeamCostSummaryParams {
	o.SetFrom(from)
	return o
}

// SetFrom adds the from to the get team cost summary params
func (o *GetTeamCostSummaryParams) SetFrom(from string) {
	o.From = from
}

// WithProvider adds the provider to the get team cost summary params
func (o *GetTeamCostSummaryParams) WithProvider(provider *string) *GetTeamCostSummaryParams {
	o.SetProvider(provider)
	return o
}

// SetProvider adds the provider to the get team cost summary params
func (o *GetTeamCostSummaryParams) SetProvider(provider *string) {
	o.Provider = provider
}

// WithTeamIdentifier adds the teamIdentifier to the get team cost summary params
func (o *GetTeamCostSummaryParams) WithTeamIdentifier(teamIdentifier string) *GetTeamCostSummaryParams {
	o.SetTeamIdentifier(teamIdentifier)
	return o
}

// SetTeamIdentifier adds the teamIdentifier to the get team cost summary params
func (o *GetTeamCostSummaryParams) SetTeamIdentifier(teamIdentifier string) {
	o.TeamIdentifier = teamIdentifier
}

// WithTo adds the to to the get team cost summary params
func (o *GetTeamCostSummaryParams) WithTo(to string) *GetTeamCostSummaryParams {
	o.SetTo(to)
	return o
}

// SetTo adds the to to the get team cost summary params
func (o *GetTeamCostSummaryParams) SetTo(to string) {
	o.To = to
}

// WriteToRequest writes these params to a swagger request
func (o *GetTeamCostSummaryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param from
	if err := r.SetPathParam("from", o.From); err != nil {
		return err
	}

	if o.Provider != nil {

		// query param provider
		var qrProvider string
		if o.Provider != nil {
			qrProvider = *o.Provider
		}
		qProvider := qrProvider
		if qProvider != "" {
			if err := r.SetQueryParam("provider", qProvider); err != nil {
				return err
			}
		}

	}

	// path param teamIdentifier
	if err := r.SetPathParam("teamIdentifier", o.TeamIdentifier); err != nil {
		return err
	}

	// path param to
	if err := r.SetPathParam("to", o.To); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
